name: Test coverage
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'python/**'
      - '.github/workflows/cmake.yml'
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'python/**'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Cache apt
      uses: actions/cache@v2
      env:
        cache-name: cache-apt
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Cache ccache
      uses: actions/cache@v2
      env:
        cache-name: cache-ccache
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-${{ env.cache-name }}-bulid-Debug

    - name: Install system packages
      run: |
        sudo apt-get update
        sudo apt-get install cmake
        sudo apt-get install libopenblas-dev
        sudo apt-get install libjpeg-dev
        sudo apt-get install -y g++-9 g++-9-multilib
        sudo apt-get install ccache
        sudo apt-get install lcov
        echo "CC=gcc-9" >> $GITHUB_ENV
        echo "CXX=g++-9" >> $GITHUB_ENV

    - name: Build tests and examples
      run: |
        export MAKE='make -j1'
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON ../
        cmake --build .

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

    - name: Create lcov report
      run: |
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' '*/tests/*' '*/3rdparty/*' --output-file coverage.info
        lcov --list coverage.info
        bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
