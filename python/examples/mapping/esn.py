import sys
import numpy
from metric.mapping import ESN


def main():
    # run ESN on small dataset
    slise_r = numpy.float_([
        [1, 0.75, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0.25, 0.5, 0.75, 1, 0.75, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0.25, 0.5, 0.75, 1, 0.75, 0.5, 0.25, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.75, 1, 0.75, 0.25, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.75, 1, 0.75],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25]
    ])

    target_r = numpy.float_([
        [-0.45, -0.4, -0.35, -0.3, -0.25, -0.2, -0.15, -0.1, -0.05, 0, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4],
        [0.5, 0.25, 0, 0.25, 0.5, 0.25, 0, 0.25, 0.5, 0.25, 0, 0.25, 0.5, 0.25, 0, 0.25, 0.5, 0.25],
    ])
    # first line (position of peak) is easy to predict, second is much harder. ESN predicts it better in no-echo mode

    slices_test_r = numpy.float_([
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.75, 1, 0.75],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0.25, 0.5, 0.75, 1, 0.75, 0.25, 0, 0, 0],
        [0, 0, 0, 0, 0, 0.25, 0.5, 0.75, 1, 0.75, 0.5, 0.25, 0, 0, 0, 0, 0, 0],
        [0, 0.25, 0.5, 0.75, 1, 0.75, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 0.75, 0.5, 0.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ])

    esn = ESN(w_size=500, w_connections=4, w_sr=0.99, alpha=0.5, washout=5, beta=0.9)
    esn.train(slise_r, target_r)
    prediction = esn.predict(slices_test_r)
    print("Prediction:", prediction)


sys.exit(main())
