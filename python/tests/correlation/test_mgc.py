from metric.correlation import MGC, MGC_direct
import numpy
import pytest


a1 = numpy.float_([[-1.08661677587398], [-1.00699896410939], [-0.814135753976830],
                   [-0.875364720432552], [-0.659607023272462], [-0.798949992922930], [-0.431585448024267],
                   [-0.619123703544758], [-0.351492263653510], [-0.394814371972061], [-0.309693618374598],
                   [-0.352009525808777], [-0.0803413535982411], [0.0103940699342647], [-0.130735385695596],
                   [-0.138214899507693], [0.0279270082022143], [0.141670765995995], [0.112221224566625],
                   [0.376767573021755], [0.186729429735154], [0.597349318463320], [0.451380104139401],
                   [0.639237742050564], [0.797420868050314], [0.690091614630087], [0.921722674141222],
                   [0.852593762434809], [0.954771723842945], [1.03297970279357]])

b1 = numpy.float_([[2.70625143351230], [1.41259513494005], [0.666086793692617],
                   [0.647856446084279], [0.887764969338737], [0.286220905202707], [0.543682026943014],
                   [0.0402339224257120], [0.105812168910424], [0.0230915137205610], [0.00298976085950325],
                   [0.00366997150982423], [0.000384825484363474], [7.27293780465119e-05], [2.50809340229209e-07],
                   [0.00306636655437742], [0.000456283181338950], [0.00801756105329616], [1.17238339150888e-09],
                   [0.0803830108071682], [0.0774478107095828], [0.0474847202878941], [0.0818772460512609],
                   [0.486406609209630], [0.197547677770060], [0.628321368933714], [1.02400551043736],
                   [0.552591658802459], [1.52144482984914], [3.43908991254968]])


def test_symmetry():
    tolerance = 1e-13
    expected_distance = 0.28845660296530595

    mgc_corr = MGC(metric1='euclidean', metric2='manhatten')

    result = mgc_corr(a1, b1)
    assert result == pytest.approx(expected_distance, tolerance)

    mgc_corr2 = MGC(metric1='manhatten', metric2='euclidean')

    result = mgc_corr2(b1, a1)
    assert result == pytest.approx(expected_distance, tolerance)


def test_xcorr():
    tolerance = 1e-5
    expected_correlation = [0.3406052387919164,
                            0.36670317239506234,
                            0.35527060120466675,
                            0.3899053662191226,
                            0.2884565911772877,
                            0.37837904236096026,
                            0.4589100366738734,
                            0.3811881240213428,
                            0.44657481646290537]

    mgc = MGC(metric1='euclidean', metric2='euclidean')
    correlation = mgc.xcorr(a1, b1, n=4)

    assert len(expected_correlation) == len(correlation)

    for result, expected in zip(correlation, expected_correlation):
        assert result == pytest.approx(expected, tolerance)
