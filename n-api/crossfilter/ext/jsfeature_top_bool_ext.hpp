/*
This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.

Copyright (c) 2019 Panda Team
*/
#include <node_api.h>
#include "jsfeature_top.hpp"
#include "utils.hpp"
extern template napi_value top_<bool,int64_t,int64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<int64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,int64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<int64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,int32_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<int32_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,int32_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<int32_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,bool,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<bool>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,bool,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<bool>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,double,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<double>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,double,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<double>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,std::string,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<std::string>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,std::string,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<std::string>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,uint64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<uint64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,uint64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int64_t,js_array<uint64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,int64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<int64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,int64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<int64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,int32_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<int32_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,int32_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<int32_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,bool,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<bool>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,bool,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<bool>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,double,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<double>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,double,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<double>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,std::string,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<std::string>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,std::string,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<std::string>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,uint64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<uint64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,uint64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,int32_t,js_array<uint64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,int64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<int64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,int64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<int64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,int32_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<int32_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,int32_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<int32_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,bool,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<bool>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,bool,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<bool>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,double,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<double>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,double,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<double>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,std::string,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<std::string>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,std::string,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<std::string>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,uint64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<uint64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,uint64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,bool,js_array<uint64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,int64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<int64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,int64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<int64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,int32_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<int32_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,int32_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<int32_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,bool,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<bool>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,bool,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<bool>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,double,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<double>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,double,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<double>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,std::string,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<std::string>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,std::string,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<std::string>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,uint64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<uint64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,uint64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,double,js_array<uint64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,int64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<int64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,int64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<int64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,int32_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<int32_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,int32_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<int32_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,bool,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<bool>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,bool,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<bool>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,double,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<double>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,double,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<double>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,std::string,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<std::string>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,std::string,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<std::string>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,uint64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<uint64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,uint64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,std::string,js_array<uint64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,int64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<int64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,int64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<int64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,int32_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<int32_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,int32_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<int32_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,bool,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<bool>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,bool,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<bool>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,double,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<double>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,double,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<double>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,std::string,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<std::string>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,std::string,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<std::string>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,uint64_t,true,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<uint64_t>,true,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,uint64_t,false,cross::non_iterable>(napi_env env, js_function & jsf, jsfeature * obj);
extern template napi_value top_<bool,uint64_t,js_array<uint64_t>,false,cross::iterable>(napi_env env, js_function & jsf, jsfeature * obj);
