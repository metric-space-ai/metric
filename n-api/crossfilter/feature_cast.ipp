/*
This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.

Copyright (c) 2019 Panda Team
*/

DEFINE_CAST_FEATURE(int64_t,int64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,bool,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,double,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,uint64_t,false, cross::non_iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(int32_t,int64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,bool,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,double,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,uint64_t,false, cross::non_iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(bool,int64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int64_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,int32_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,bool,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,double,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,uint64_t,false, cross::non_iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(double,int64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int64_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,int32_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,bool,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,double,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(double,uint64_t,uint64_t,false, cross::non_iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(std::string,int64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,bool,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,double,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,uint64_t,false, cross::non_iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(uint64_t,int64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,double,uint64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,int64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,int64_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,int32_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,int32_t,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,bool,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,bool,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,double,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,double,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,std::string,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,std::string,false, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,uint64_t,true, cross::non_iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,uint64_t,false, cross::non_iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int64_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,int32_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,bool,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,double,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int64_t,uint64_t,js_array<uint64_t>,false, cross::iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int64_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,int32_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,bool,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,double,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(int32_t,uint64_t,js_array<uint64_t>,false, cross::iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(bool,int64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int64_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,int32_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,bool,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,double,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(bool,uint64_t,js_array<uint64_t>,false, cross::iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(double,int64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int64_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,int32_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,bool,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,double,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(double,uint64_t,js_array<uint64_t>,false, cross::iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int64_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,int32_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,bool,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,double,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(std::string,uint64_t,js_array<uint64_t>,false, cross::iterable);
///-----------------------------------------------//
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int64_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,int32_t,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,bool,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,double,js_array<uint64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<int64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<int64_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<int32_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<int32_t>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<bool>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<bool>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<double>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<double>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<std::string>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<std::string>,false, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<uint64_t>,true, cross::iterable);
DEFINE_CAST_FEATURE(uint64_t,uint64_t,js_array<uint64_t>,false, cross::iterable);
///-----------------------------------------------//
